---
layout: post
title: "Customizing HTML form fields in Django templates"
date: 2014-09-25 16:17:25 -0700
comments: true
categories: 
---

Django forms provide input validation and HTML form field generation.  They also integrate nicely with models.  However, Django itself does not allow one-off customizations of form-generated HTML.  In this post I will discuss a method for customizing the HTML generated by Django form fields.

Here's a Django form definition:

```python
from django import forms

class AuthenticationForm(forms.Form):
    username = forms.CharField(max_length=254)
    password = forms.CharField(widget=forms.PasswordInput)
```

Here's the form used in a template:

{% raw %}
    {{ form.as_p }}
{% endraw %}

We're using [Bootstrap][] and we want to add an `input-lg` CSS class onto our username field to make it really big.

We could make an `<input>` element ourselves instead of using Django's generated HTML.  This would mean manually inserting the `name`, `value`, `id`, and any other attributes specified in our Django form field.

Instead we can use [django-widget-tweaks][].

### django-widget-tweaks

[Mikhail Korobov][kmike] originally created the [django-widget-tweaks][] library in 2011.  It started as a series of template filters that could be used to add or modify attributes in the HTML of your Django form field.  Here's an example usage of the `add_class` filter for adding a CSS class to our Django HTML form field:

{% raw %}
    <p>
        {{ form.username|add_class:"input-lg" }}
        {{ form.username.errors }}
    </p>
    <p>
        {{ form.password }}
        {{ form.password.errors }}
    </p>
{% endraw %}

I discovered [django-widget-tweaks][] shortly after [Mikhail][kmike] created it.  I wanted a more HTML-like syntax for my form field customizations so I made a `render_field` template tag based on django-widget-tweaks.  I maintained my own fork of the project and sat on this new template tag for about a year before opening a pull request.

With this new `render_field` template tag you can add or append attributes to form fields with a more HTML-like syntax that front-end developers can appreciate:

{% raw %}
    {% load widget_tweaks %}
    <p>
        {% render_field form.username class+="input-lg" %}
        {{ form.username.errors }}
    </p>
    <p>
        {% render_field form.password %}
        {{ form.password.errors }}
    </p>
{% endraw %}

With `render_field` we can also set a CSS class for erroneous and required form fields.  An example with an error class:

{% raw %}
    {% with WIDGET_ERROR_CLASS='has-error' %}
        {% load widget_tweaks %}
        <p>
            {% render_field form.username class+="input-lg" %}
            {{ form.username.errors }}
        </p>
        <p>
            {% render_field form.password %}
            {{ form.password.errors }}
        </p>
    {% endwith %}
{% endraw %}

[django-widget-tweaks]: https://pypi.python.org/pypi/django-widget-tweaks
[kmike]: http://kmike.ru/pages/about/
